spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${DATABASE_HOST:jdbc:mysql://localhost:3309/proposta?createDatabaseIfNotExist=true}
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.initialization-mode=always
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#feign config timeout
feign.client.config.cards.read-timeout=200
feign.client.config.cards.connect-timeout=200

# Request Financial Analysis API
analise.hostname=http://${ANALISE_HOST:localhost}:9999
analise.request=/api/solicitacao

# Account API
cards.hostname=http://${CONTAS_HOST:localhost}:8888
cards.request=/api/cartoes

# Actuator
management.endpoint.health.show-details=always

# Metrics
management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoint.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta-cards}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta-cards/protocol/openid-connect/certs}

# Request access token
login.keycloak.request.token.uri=${KEYCLOAK_REQUEST_TOKEN_URI:http://localhost:18080/auth/realms/proposta-cards/protocol/openid-connect/token}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Jaeger - Nome do serviço
opentracing.jaeger.service-name=api-propostas
# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Jaeger - Tipo de amostragem (probabilístico) e sua configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

# Crypto
mycustom.crypto.password=U^7_xxe5h2XP&hEi<=G?cDe2sO/f#|
mycustom.crypto.salt=48759812